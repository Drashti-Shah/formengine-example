// import Head from 'next/head'
// import Image from 'next/image'
// import styles from '../styles/Home.module.css'

// export default function Home() {
//   return (
//     <div className={styles.container}>
//       <Head>
//         <title>Create Next App</title>
//         <meta name="description" content="Generated by create next app" />
//         <link rel="icon" href="/favicon.ico" />
//       </Head>

//       <main className={styles.main}>
//         <h1 className={styles.title}>
//           Welcome to <a href="https://nextjs.org">Next.js!</a>
//         </h1>

//         <p className={styles.description}>
//           Get started by editing{' '}
//           <code className={styles.code}>pages/index.js</code>
//         </p>

//         <div className={styles.grid}>
//           <a href="https://nextjs.org/docs" className={styles.card}>
//             <h2>Documentation &rarr;</h2>
//             <p>Find in-depth information about Next.js features and API.</p>
//           </a>

//           <a href="https://nextjs.org/learn" className={styles.card}>
//             <h2>Learn &rarr;</h2>
//             <p>Learn about Next.js in an interactive course with quizzes!</p>
//           </a>

//           <a
//             href="https://github.com/vercel/next.js/tree/canary/examples"
//             className={styles.card}
//           >
//             <h2>Examples &rarr;</h2>
//             <p>Discover and deploy boilerplate example Next.js projects.</p>
//           </a>

//           <a
//             href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
//             className={styles.card}
//           >
//             <h2>Deploy &rarr;</h2>
//             <p>
//               Instantly deploy your Next.js site to a public URL with Vercel.
//             </p>
//           </a>
//         </div>
//       </main>

//       <footer className={styles.footer}>
//         <a
//           href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
//           target="_blank"
//           rel="noopener noreferrer"
//         >
//           Powered by{' '}
//           <span className={styles.logo}>
//             <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
//           </span>
//         </a>
//       </footer>
//     </div>
//   )
// }


import React, { forwardRef, useEffect, useRef, useState } from "react";
import dynamic from "next/dynamic";
import { FaSave } from "react-icons/fa";

const PageCreatorComponent = dynamic(
  () => import("../src/components/pagecreator"),
  {
    ssr: false,
  }
);

const ForwardRefEditor = forwardRef((props, ref) => (
  <PageCreatorComponent {...props} editorRef={ref} />
));
const Home = (props) => {
  const [formValues, setFormValues] = useState({});
  const childRef = useRef({});

  const [formComponents, setFormComponents] = useState([
    {
        "form": {
            "key": "Screen",
            "type": "Screen",
            "props": {},
            "children": [
                {
                    "key": "name",
                    "type": "RsInput",
                    "props": {
                        "label": {
                            "value": "Name"
                        },
                        "placeholder": {
                            "value": "Enter you name"
                        }
                    },
                    "schema": {
                        "validations": [
                            {
                                "key": "required"
                            }
                        ]
                    },
                    "tooltipProps": {
                        "text": {
                            "value": "Name"
                        }
                    }
                },
                {
                    "key": "TiptapTextEditor 1",
                    "type": "TiptapTextEditor",
                    "props": {}
                }
            ]
        },
        "errorType": "RsErrorMessage",
        "languages": [
            {
                "bidi": "ltr",
                "code": "en",
                "name": "English",
                "dialect": "US",
                "description": "American English"
            }
        ],
        "tooltipType": "RsTooltip",
        "localization": {},
        "defaultLanguage": "en-US"
    },
    {
        "name": "Test1",
        "TiptapTextEditor 1": "<p><strong>Test2</strong></p>"
    }
]);

  const [builderOptions, setbuilderOptions] = useState({});

  
  childRef.current = {name: "drashti"}
  
  async function  saveChanges() {
    const inputValue = childRef.current?.getInputValue();
    const formJSON = await childRef.current.getFormJSON()
    console.log('formJSON== ', formJSON,inputValue);
  }

  const onFormChange = (data) => {
    setFormValues(data)
  }
  

  return (
    <>
      <div className="p-5">
        
          <div className="bg-white">
            <div className="lg:w-6/6 px-6 pb-8">
              <div className="pt-2">
                <div className="w-full border border-gray-200 rounded-md p-8 mt-2">
                  <ForwardRefEditor
                    template={formComponents}
                    builderOptions={builderOptions}
                    onFormChange={onFormChange}
                    ref={childRef}
                                      />
                </div>
                <div className="w-full flex flex-row-reverse mt-8">
                  <button
                    onClick={(e) => {
                      saveChanges(e);
                    }}
                    type="button"
                    className="inline-flex items-center px-3 py-3 border border-indigo-600 border-2 text-xs font-medium rounded shadow-sm text-indigo-600 mx-2"
                  >
                    <FaSave />
                    &nbsp;Save
                  </button>
                </div>
              </div>
            </div>
          </div>
      
      </div>
    </>
  );
};

export default Home;

